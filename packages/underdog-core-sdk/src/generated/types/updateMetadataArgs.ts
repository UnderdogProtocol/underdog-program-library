/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import {
  Serializer,
  string,
  struct,
  u16,
} from '@metaplex-foundation/umi/serializers';

export type UpdateMetadataArgs = {
  /** The name of the asset */
  name: string;
  /** The symbol for the asset */
  symbol: string;
  /** URI pointing to JSON representing the asset */
  uri: string;
  /** Royalty basis points that goes to creators in secondary sales (0-10000) */
  sellerFeeBasisPoints: number;
};

export type UpdateMetadataArgsArgs = UpdateMetadataArgs;

/** @deprecated Use `getUpdateMetadataArgsSerializer()` without any argument instead. */
export function getUpdateMetadataArgsSerializer(
  _context: object
): Serializer<UpdateMetadataArgsArgs, UpdateMetadataArgs>;
export function getUpdateMetadataArgsSerializer(): Serializer<
  UpdateMetadataArgsArgs,
  UpdateMetadataArgs
>;
export function getUpdateMetadataArgsSerializer(
  _context: object = {}
): Serializer<UpdateMetadataArgsArgs, UpdateMetadataArgs> {
  return struct<UpdateMetadataArgs>(
    [
      ['name', string()],
      ['symbol', string()],
      ['uri', string()],
      ['sellerFeeBasisPoints', u16()],
    ],
    { description: 'UpdateMetadataArgs' }
  ) as Serializer<UpdateMetadataArgsArgs, UpdateMetadataArgs>;
}
